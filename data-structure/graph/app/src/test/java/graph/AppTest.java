/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package graph;

import org.junit.Test;

import java.util.HashSet;
import java.util.Set;

import static org.junit.Assert.*;

public class AppTest {

    Graph graph = new Graph();

    Node<Integer> node1= new Node("5");
    Node<Integer> node2= new Node("6");
    Node<Integer> node3= new Node("7");
    Node<Integer> node4= new Node("8");

    @Test public void testAppHasAGreeting() {
        App classUnderTest = new App();
        assertNotNull("app should have a greeting", classUnderTest.getGreeting());
    }

    @Test public void testAddNode() {
        assertEquals("Node{value=5}",graph.AddNode(node1).toString());
        assertTrue(graph.vertexes.size()==1);
    }

    @Test public void testAddNeighbor() {
        node1.addNeighbor(node2);
        node1.addNeighbor(node4);
        graph.GetNeighbors(node1).add(node2);
        graph.GetNeighbors(node1).add(node4);

        assertTrue(graph.GetNeighbors(node1).contains(node2));
        assertTrue(graph.GetNeighbors(node1).contains(node4));
    }

    @Test public void testAddEdge(){
        assertTrue(graph.AddEdge(node1,node2,5));
        assertTrue(graph.AddEdge(node3, node4,0));
    }

    @Test public void testAddEdgeWithNullNode(){
        assertFalse(graph.AddEdge(node1,null,5));
    }

    @Test public void testSize(){
        graph.AddNode(node1);
        graph.AddNode(node2);
        graph.AddNode(node3);
        graph.AddNode(node4);
        assertEquals(4, graph.size());
    }

    @Test public void testGetNodes(){
        graph.AddNode(node1);
        graph.AddNode(node2);
        graph.AddNode(node3);
        graph.AddNode(node4);
        assertTrue(graph.GetNodes().containsAll(graph.vertexes));
    }

    @Test public void testEmptyGraph(){
        assertEquals(null ,graph.isEmpty());
    }
}
